9일차(내장객체=>액션태그 작성방법)=>쿠키와 세션->JDBC->회원관리

1.JSP의 구성요소 4가지=>include 지시어?=>Jsp=>쉽게 개발가능,속도느려짐
                                                            중복코딩
                                           개인블러그,중소규모(모델1)

2.서블릿의 개요 및 작성법->대규모 사이트 개발(모델2)->속도빠름
                           구성원의 수준이 높아야된다.

  jsp--->서블릿으로 변환->실행결과(html문서)->재전송
     내장객체->7~8개(3~4개 사용)-> <%  ~  %>


**include지시어

현재 페이지에 포함될 파일을 텍스트 형태 그대로 원래 페이지에 삽입 후 처리하기 위한 구문
                            ========================================

<%@ include  file="include될 파일의 URL(상대적인 경로포함)"%>

  JspWork->프로젝트명
     |
      -WebContent(/)->JspModule.java (확장자만 ~.java일뿐)
                    확장자가 중요하게 아니라 그 파일의 내용이
                    중요(텍스트위주)
           |
            -include->includeTest.jsp
                 -sub->bottom.html
           |
            -inobject->request,response,out위주
                       ** req.jsp,res.jsp
           |
            -action
           |
            -forward

     파일을 불러오는 경우->~.jsp,~.html ~.java

경로->상대경로->현재폴더를 기준->..(상위폴더) ,  .(현재폴더)
      절대경로->c:\~


**include 지시어->정적개념->텍스트형태로 삽입하고자하는 위치에 불러다
                           넣어준다.
                           불러오는 파일의 확장자가 중요한것이  아니라
                           그 내용이 중요하다.(불러오는 화면디자인의내용)
                            =>자바의 선언부분을 불러올때 많이 사용
==>실행할때에는 파일을 불러와서 넣어준다.

<%@include file="../JspModule.java" %>
 <%-- <%!
      public String getString() {
	  return "including Testing,,,";
}
%> --%>
------------------------------------------------------------------------
내장 객체(Implicit Object)

JSP 프로그램 코드에서 프로그래머가 선언하지 않아도 사용할 수 있는 
미리 선언된 객체를 의미한다.

스크립트릿(<% ~ %>) 안에서만 사용할 수 있다.

ex) request.getParameter(~)


JSP 실행 시 자동 생성되는 서블릿 코드의
   _jspService() 메소드 내에서 선언된다.


***request 내장 객체***

개요(=개념)

클라이언트에서 서버로 보내는 요청에 대한 정보를 담고 있는 객체
--------------------------------------------------------------
HttpServletRequest 인터페이스의 인스턴스
_jspService() 메소드의 인자로 전달

***request 내장 객체의 기능****

클라이언트(웹 브라우저)의 정보 출력
서버의 정보 출력
클라이언트로부터 쿼리(query)로 전달된 파라미터 출력
  ->request.getParameter("매개변수")

HTTP 요청 메시지의 헤더(header) 출력
쿠키 및 속성 처리
--------------------------------------------------------
1.서버의 도메인이름을 출력:<%=request.getServerName() %><br>
2.서버의 포트번호을 출력:<%=request.getServerPort() %><br>

***3.요청된 URL에서 경로를 출력:<%=request.getRequestURL() %><br>
                       =>http://localhost:8090/JspWork/inobject/req.jsp

***4.요청된 URI에서 경로를 출력:<%=request.getRequestURI() %><br>
                       10장.모델2(MVC패턴)
                       =>/JspWork/inobject/req.jsp
                      앞의 http부터 포트번호를 제외한 나머지부분


***5.원격ip 주소:<%=request.getRemoteAddr() %><br>

6.클라이언트가 요청한 프로토콜 출력:<%=request.getProtocol() %><br>
***7.요청방식(Get,Post)을 출력:<%=request.getMethod() %><br>

===========================================================
1.서버의 도메인이름을 출력:localhost
2.서버의 포트번호을 출력:8090
3.요청된 URL에서 경로를 출력:http://localhost:8090/JspWork/inobject/req.jsp
4.요청된 URI에서 경로를 출력:/JspWork/inobject/req.jsp
5.원격ip 주소:0:0:0:0:0:0:0:1
6.클라이언트가 요청한 프로토콜 출력:HTTP/1.1
7.요청방식(Get,Post)을 출력:GET

*****************************************************
   ex) if(request.getMethod()==GET) {
           response.sendRedirect(aaa.jsp);//이동하라
         }else{ //POST
           response.sendRedirect(bbb.jsp);//이동하라
         }
******************************************************
** 하나의 매개변수를 전달(문자,숫자~)

  request.getParameter("매개변수")

**하나이상의 매개변수를 전달받을때에는 체크박스~
  request.getParameterValues("hobby"); //배열객체

String[] hobby = request.getParameterValues("hobby");
for(int i = 0; i < hobby.length; i++) { ... }
**********************************************************

***response 내장 객체***

개요(=개념)
서버에서 클라이언트로 보내는 응답 메시지에 대한 정보를 담고 있는 객체
=====================================================================
==>요청한 문서의 결과를 html문서에 담아서 클라이언트에 재전송해주는 객체
-------------------------------------------------------------------------
HttpServletResponse 인터페이스의 인스턴스
_jspService() 메소드의 인자로 생성


**response 내장 객체의 기능

**응답 페이지에 대한 설정 정보 지정
->response.setContentType("text/html;charset=utf-8");

클라이언트로 전달될 응답 메시지의 헤더 설정->다운로드 받을때 설정
**다른 웹 페이지로의 Redirect =>response.sendRedirect("이동할 페이지명")

pageContext의 기능

**다른 내장 객체 생성=>사용자정의 태그(요즘에는 사용X)
======================================================
하나의 JSP페이지가 생성 될 때 해당 페이지의 다양한 정보와 특성들을 관리
페이지 범위 내에서의 정보 공유


 ***JSP를 이용해서 메인페이지를 만드는 기술=>Template방법***

 include지시어--->include액션태그를 사용

 *** request,response,out***
 pageContext->다른 내장객체를 얻어올때 사용,데이터 공유(O)
 ***session 내장객체->로그인을 할때 데이터를 공유

 --->** 액션태그의 forward->데이터를 공유시키면서 페이지를 이동(모델2)
 **config=>모델2(SevletConfig객체)
 exception 내장객체->에러를 잡아내는 역할 내장객체==>** el구문 **
 page 내장객체->현재 페이지에서 사용이 가능한 객체(=this와 역할이 비슷)
===========================================================================


***액션 태그(Action Tag)*** =><font size="3pt">테스트</font>

1)겉의 모양이 태그로 구성, 
2)JSP에서 제공하는 특별한 기능을 사용하기 위한 태그
3)실행 시 자바 코드로 자동 변환된다.

   =>html5,css,js+자바코드(회원가입,회원수정,탈퇴,,,)
 <%
    객체생성->메서드를 호출->
     Car sonata=new Car();
     sonata.setName("소나타");
     ,,,
 %>
 
 =====================>자주 사용이되고 ,반복적인 기능=>태그형태로 만듬
                        ->기능이 있는 태그(=액션태그)
                       
  ----->화면디자인+액션태그(장점)====>화면디자인이 덜복잡->전체구조 파악이 쉽다
                                       디자인하기가 쉬워진다.
---------------------------------------------------------------------

***액션 태그의 사용 목적**

JSP 코드를 보다 쉽고 빠르게 작성하기 위해 사용=>간결하게 사용하기위해서

****자바빈즈(JavaBeans)의 활용과 관련된 액션 태그(종류)

<jsp:useBean> : JSP 페이지 내에서 사용할 자바빈즈 객체를 생성
<jsp:setProperty> : 생성된 자바빈즈 객체의 멤버 변수 값을 지정
<jsp:getProperty> : 생성된 자바빈즈 객체의 특정 멤버 변수 값을 반환

JSP의 실행 제어와 관련된 액션 태그=>메인페이지를 작성할 수 가 있기때문에

<jsp:forward> : 다른 JSP 페이지로 처리 제어권을 넘김-->페이지를 이동
<jsp:include> : 다른 JSP 페이지를 호출하여 실행한 후 돌아옴->현재 페이지에
                  다른 페이지를 불러올때 사용
              ->include지시자와 구분해서 정리

<jsp:param> : 다른 JSP 페이지 실행 시 파라미터를 전달하기 위해 사용
**********************************************************************



  기술면접

웹프로그래밍=>******페이지 이동시키는 방법(jsp)******* =>기술 면접
                  =>오라클->join,subQuery(실습)


1.response객체->res.jsp

                                    ->http:// 반드시 줄것
 //response.sendRedirect("http://www.chosun.com");  외부의 사이트로 이동
     response.sendRedirect("./req.jsp"); //상대경로를 지정(내부 파일이동)
    =>**URL창이 이동할 페이지로 전환이 되면서 이동이 된다.
    =>**데이터를 서로 공유할 수없다.-->단순히 이동시키는 기능밖에 없다

2.forward액션태그==>모델2의 핵심
    =>외부의 사이트로 이동X
    =>자기 프로젝트의 다른 페이지로만 이동이 가능하다.(O)
    =>**URL창이 이동할 페이지로 전환이 X **
    결론) 데이터를 공유하면서 페이지를 이동시킬 수 가 있다.

회원로그인->예매페이지 1-->예매페이지 2--->예매페이지 3
                지역      상영관 시간     카드 or 무통장입금

 웹->페이지이동하면 전페이지의 정보가 사라진다.=>세션처리

  A.jsp===========>B.jsp=========>C.jsp
 int su=100      out.println(su)
   링크

3.자바스크립트        ->location.href="이동할 페이지명"
                        location.replace("http://~이동할 페이지명")
                        history.back()->전의 페이지로 이동
                        history.go(-1)->전의 페이지로 이동
                        history.forward()->앞의 페이지로 이동
=====================================================================
 액션태그->include 액션태그


***include 지시자와  include 액션태그의 공통점,차이점****

공통점:메인페이지를 작성할때 사용이 가능(자주 사용,반복적인 구문->파일)
                                         불러오기

차이점:화면 디자인할때 ->include 지시어->정적개념

                         A.jsp->내용변경->A+.jsp=>새로고침(F5)->텍스트삽입

                         include 액션태그->동적개념=>변경된 내용이 바로 적용
                                         =>실행결과가 삽입
========================================================================
 form.jsp(이름 입력)------->include.jsp<-------sub.jsp(실행결과)
                   <-------
ex) ceo   ------------------>부장(70%)----------->과장(30%)
          <---------------- 결과+html <-----------
                  응답       70%+30%=100%

=>액션태그2=>jstl태그(액션 태그 라이브러리)
=>식별자->사용할 액션태그의 종류를 구분하는데 사용

ex) <jsp:include~>  ==><c:if></c:if>

flush=지금까지 작업한 내용의 버퍼의양을 요청한 페이지로
      전송할지 말지를 결정해주는 속성->false(그대로 보관)
     =>합쳐서 출력해야 제대로된 결과물을 볼 수 있기때문에 
     =>** 대부분 false를 한다.**

<식별자:액션태그명 속성명="속성값"  flush="false" />
<jsp:include page="sub.jsp"  flush="false" />

========================================================
 forward->form.jsp(이동시킬 페이지명)-->move.jsp->특정 jsp로 이동
                                             a.jsp,b.jsp
      
   이동할 페이지명:------->move.jsp--------------->a.jsp
              <jsp:forward page="이동할페이지명" />
      form.jsp------------->부장------------------->과장
         사장  <------------------------------------
        cf광고주            매니저                      연예인
 
      페이지를 요청->404 페이지(요청한 페이지가 없을때)
                     요청한 페이지가 있으면 보여주면 된다.
       
1.forward->올바른 요청을 했는지를 체크하는 기능
2.올바른 데이터를 공유해서 전송을 해줬는지를 체크
---------------------------------------------------------------
<body>
   <h1>페이지를 이동시키는 역할</h1>
   <%
     String move=request.getParameter("move");
     System.out.println("이동할 페이지명(move=>)"+move);
     //response.sendRedirect(move);
     if(move.equals("a.jsp")){
    	 //response.sendRedirect("a.jsp");
   %>
   <jsp:forward page='a.jsp' /><br>
   <%  }else if(move.equals("b.jsp"))  {%>
   <jsp:forward page='b.jsp' /><br>
   <% }else { %>
      <script>
        window.alert("당신이 요청하신 페이지는 없습니다.\n다시 확인해 보세요!!")
        //history.back() or history.go(-1);
        location.href="forward.jsp"
      </script>
   <%} %>
</body>
</html>
=============================================================
 예습

  액션태그 param, include,forward정리->메인페이지 작성
  액션태그 useBean, setProperty, getProperty 
  쿠키와 세션
===============================================================


